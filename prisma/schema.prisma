generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  createdAt     DateTime  @default(now())
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
  @@map("verification_tokens")
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

// model PaymentAccounts {
//   id       String  @id @default(cuid())
//   type     String
//   name     String
//   number   String?
//   balance  Int
//   currency String
// }
//
// model Goal {
//   id         String   @id @default(cuid())
//   name       String
//   finishDate DateTime
//   color      String
//   icon       String
//   ammount    Int
// }
//
// model Transaction {
//   id          String   @id @default(cuid())
//   type        String
//   name        String
//   description String?
//   ammount     Int
//   currcency   String
//   date        DateTime
//   accountTo   String?
//   accountFrom String?
//   frequency   Int?
//   category    String
// }
